#include <iostream>
#include <vector>
#include <cassert>
#include <stack>
#include <queue>
#include <algorithm>
#include <unordered_map>
#include <unordered_set>
#include <map>
#include <set>
#include <bitset>
#include <numeric>
#include <cmath>

using namespace std;

struct TreeNode
{
    int val;
    TreeNode *left;
    TreeNode *right;
    TreeNode() : val(0), left(nullptr), right(nullptr) {}
    TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
    TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
};

TreeNode *recurse(vector<int> &tree, int k)
{
    if (k >= tree.size() || tree[k] == -1)
        return nullptr;

    return new TreeNode(tree[k], recurse(tree, k * 2 + 1), recurse(tree, k * 2 + 2));
}

TreeNode *populate(vector<int> &tree)
{
    return recurse(tree, 0);
}

class Solution
{
    const int MOD = 1337;
    int powmod(int a, int k) // a^k mod 1337 where 0 <= k <= 10
    {
        a %= MOD;
        int result = 1;
        for (int i = 0; i < k; ++i)
            result = (result * a) % MOD;
        return result;
    }

public:
    int superPow(int a, vector<int> &b)
    {
        if (b.empty())
            return 1;
        int tail = b.back();
        b.pop_back();
        return powmod(superPow(a, b), 10) * powmod(a, tail) % MOD;
    }
};

int main()
{
    Solution sol;
    int r;

    sol.superPow(4978626, vector<int>() = {9, 6, 7, 6, 8, 3, 8, 9, 5, 6, 8, 2, 8, 7, 1, 8, 1, 9, 7, 0, 1, 5, 6, 8, 4, 0, 1, 8, 4, 2, 5, 9, 8, 4, 5, 9, 8, 5, 8, 5, 2, 8, 9, 0, 6, 2, 0, 9, 1, 8, 9, 4, 5, 7, 5, 1, 8, 6, 1, 4, 8, 6, 3, 9, 1, 1, 0, 1, 6, 8, 8, 0, 8, 7, 1, 4, 9, 3, 4, 2, 3, 5, 7, 8, 3, 2, 1, 3, 0, 3, 7, 0, 1, 3, 9, 4, 6, 1, 5, 4, 1, 5, 5, 0, 4, 8, 4, 5, 1, 0, 8, 5, 6, 7, 5, 1, 1, 9, 4, 1, 2, 3, 1, 3, 8, 3, 8, 6, 4, 5, 1, 8, 3, 6, 8, 7, 6, 2, 3, 7, 5, 3, 4, 1, 0, 0, 2, 3, 9, 8, 4, 3, 1, 7, 8, 2, 2, 8, 8, 9, 6, 9, 7, 9, 7, 5, 8, 3, 9, 3, 3, 4, 6, 9, 7, 8, 1, 1, 1, 2, 9, 7, 5, 3, 5, 6, 5, 9, 4, 3, 8, 0, 3, 7, 1, 2, 4, 0, 8, 6, 3, 3, 2, 2, 2, 0, 0, 4, 1, 4, 6, 3, 1, 4, 6, 8, 0, 1, 0, 4, 4, 0, 7, 9, 8, 0, 4, 2, 0, 2, 0, 6, 5, 3, 8, 7, 3, 0, 3, 6, 6, 2, 9, 8, 6, 7, 8, 6, 8, 8, 2, 5, 9, 1, 6, 7, 2, 0, 1, 4, 2, 4, 2, 7, 7, 2, 7, 2, 5, 2, 0, 1, 4, 0, 1, 2, 9, 0, 0, 8, 8, 3, 5, 9, 6, 1, 8, 0, 2, 2, 7, 4, 6, 9, 4, 3, 4, 3, 5, 9, 7, 5, 2, 2, 7, 4, 4, 7, 4, 5, 7, 4, 0, 2, 4, 8, 5, 2, 1, 7, 4, 8, 4, 0, 9, 0, 5, 5, 5, 2, 4, 2, 0, 7, 6, 9, 1, 1, 8, 7, 8, 5, 1, 0, 9, 5, 0, 7, 0, 1, 4, 6, 1, 0, 7, 3, 0, 4, 8, 5, 7, 3, 8, 9, 2, 4, 8, 5, 7, 7, 2, 7, 4, 5, 9, 6, 3, 2, 3, 3, 5, 7, 9, 7, 8, 8, 2, 0, 3, 0, 6, 2, 5, 6, 1, 7, 2, 1, 4, 0, 8, 6, 9, 5, 4, 1, 1, 7, 3, 4, 0, 8, 3, 1, 7, 3, 0, 9, 6, 5, 0, 4, 9, 5, 0, 0, 5, 2, 1, 9, 4, 2, 8, 4, 7, 2, 5, 0, 9, 0, 6, 1, 8, 1, 4, 6, 5, 4, 5, 3, 1, 7, 7, 0, 5, 7, 2, 0, 1, 6, 1, 6, 8, 1, 2, 7, 3, 9, 7, 4, 9, 3, 7, 9, 4, 2, 7, 1, 8, 5, 4, 2, 2, 1, 2, 7, 0, 7, 9, 2, 3, 3, 0, 3, 4, 2, 0, 8, 3, 7, 4, 2, 0, 2, 3, 6, 6, 1, 8, 4, 6, 4, 8, 8, 6, 1, 8, 8, 0, 9, 2, 3, 2, 2, 6, 7, 6, 6, 5, 9, 5, 1, 1, 5, 5, 7, 3, 1, 8, 1, 8, 4, 6, 6, 4, 4, 9, 2, 4, 9, 2, 7, 4, 4, 9, 0, 1, 6, 8, 8, 5, 3, 2, 9, 0, 7, 6, 4, 1, 4, 5, 1, 0, 3, 7, 4, 9, 9, 7, 4, 0, 1, 1, 5, 5, 0, 5, 9, 8, 6, 9, 4, 9, 1, 5, 2, 1, 3, 6, 2, 9, 3, 3, 9, 7, 2, 3, 6, 1, 2, 2, 2, 3, 3, 9, 1, 6, 6, 2, 4, 2, 1, 0, 4, 5, 7, 6, 6, 0, 2, 0, 9, 5, 3, 8, 4, 7, 4, 3, 1, 6, 5, 5, 2, 9, 4, 5, 7, 0, 9, 1, 5, 2, 4, 9, 7, 1, 5, 5, 2, 9, 5, 3, 4, 0, 4, 1, 8, 8, 4, 1, 6, 1, 6, 0, 2, 0, 7, 9, 2, 6, 1, 7, 9, 7, 6, 8, 8, 3, 4, 2, 2, 1, 6, 9, 2, 2, 0, 2, 0, 6, 3, 8, 7, 1, 1, 0, 1, 8, 9, 5, 5, 2, 3, 6, 9, 1, 4, 0, 5, 0, 2, 9, 2, 0, 0, 6, 2, 2, 0, 4, 8, 3, 5, 8, 4, 6, 0, 7, 6, 1, 4, 1, 6, 7, 9, 5, 1, 6, 7, 8, 6, 0, 9, 8, 2, 0, 6, 5, 2, 6, 1, 3, 1, 6, 1, 7, 4, 1, 4, 1, 4, 1, 4, 0, 0, 4, 8, 1, 0, 5, 1, 6, 7, 1, 7, 0, 1, 3, 7, 3, 2, 0, 6, 3, 9, 9, 1, 3, 2, 7, 4, 7, 8, 9, 7, 9, 3, 7, 2, 5, 3, 4, 3, 2, 5, 0, 4, 6, 6, 3, 1, 8, 4, 0, 3, 3, 9, 4, 6, 2, 2, 3, 1, 2, 2, 8, 1, 7, 6, 6, 2, 1, 0, 5, 3, 5, 8, 8, 3, 4, 1, 6, 4, 7, 6, 7, 0, 6, 4, 9, 0, 8, 2, 1, 0, 6, 9, 4, 3, 7, 0, 5, 0, 2, 0, 4, 9, 8, 4, 2, 4, 7, 0, 0, 5, 7, 0, 7, 3, 4, 8, 5, 2, 0, 6, 2, 6, 7, 8, 9, 5, 8, 6, 7, 0, 9, 1, 9, 7, 7, 3, 4, 5, 4, 4, 2, 3, 6, 9, 8, 0, 8, 3, 2, 0, 9, 7, 9, 6, 5, 0, 3, 6, 7, 1, 8, 6, 4, 0, 5, 4, 5, 1, 9, 1, 8, 3, 4, 4, 4, 2, 5, 2, 5, 9, 5, 6, 8, 6, 3, 6, 6, 8, 4, 5, 1, 2, 1, 8, 4, 9, 2, 0, 2, 3, 3, 0, 6, 8, 7, 0, 2, 4, 5, 8, 3, 0, 6, 4, 8, 1, 2, 4, 0, 6, 0, 3, 0, 3, 1});

    sol.superPow(2147483647, vector<int>() = {2, 0, 0});

    sol.superPow(2, vector<int>() = {1, 2, 3});
}