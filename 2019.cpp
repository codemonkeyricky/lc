#include <iostream>
#include <vector>
#include <cassert>
#include <stack>
#include <queue>
#include <algorithm>
#include <unordered_map>
#include <unordered_set>
#include <map>
#include <set>
#include <bitset>
#include <numeric>
#include <cmath>

using namespace std;

struct TreeNode
{
    int val;
    TreeNode *left;
    TreeNode *right;
    TreeNode() : val(0), left(nullptr), right(nullptr) {}
    TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
    TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
};

TreeNode *recurse(vector<int> &tree, int k)
{
    if (k >= tree.size() || tree[k] == -1)
        return nullptr;

    return new TreeNode(tree[k], recurse(tree, k * 2 + 1), recurse(tree, k * 2 + 2));
}

TreeNode *populate(vector<int> &tree)
{
    return recurse(tree, 0);
}

class Solution
{
    vector<vector<unordered_set<int>>> dp;

    vector<string> dfs(vector<string> s, char op)
    {
        vector<string> rv;
        for(auto k = 0; k < s.size(); ++k)
        {
            if (s[k][0] == op)
            {
                ++k;
                if (op == '+')
                    rv.back() = to_string(stoi(rv.back()) + stoi(s[k]));
                else
                    rv.back() = to_string(stoi(rv.back()) * stoi(s[k]));
            }
            else
                rv.push_back(s[k]);
        }
        return rv;
    }

    unordered_set<int> dfs2(string &s, int i, int j)
    {
        if (i + 1 == j)
            return {s[i] - '0'};

        if (dp[i][j].empty())
        {
            unordered_set<int> rv;
            for (auto k = i; k < j; ++k)
                if (s[k] == '*' || s[k] == '+')
                {
                    auto first = dfs2(s, i, k);
                    auto second = dfs2(s, k + 1, j);
                    for (auto &fir : first)
                        for (auto &sec : second)
                            if (s[k] == '*')
                            {
                                if (fir * sec <= 1000)
                                    rv.insert(fir * sec);
                            }
                            else
                            {
                                if (fir + sec <= 1000)
                                    rv.insert(fir + sec);
                            }
                }

            dp[i][j] = rv;
        }
        return dp[i][j];
    }

public:
    int scoreOfStudents(string s, vector<int> &answers)
    {
        dp = vector<vector<unordered_set<int>>>(32, vector<unordered_set<int>>(32));

        vector<string> input;
        for (auto &c : s)
            input.push_back(string(1, c));

        int right = stoi(dfs(dfs(input, '*'), '+')[0]);
        auto wrong = dfs2(s, 0, s.size()); 

        int rv = 0;
        for (auto &a : answers)
            if (a == right)
                rv += 5;
            else if (wrong.count(a))
                rv += 2;
        return rv;
    }
};

int main()
{
    Solution sol;
    int r;

    r = sol.scoreOfStudents("6+6*6+3*3+3*6+6*6+3*9+6*6+6", vector<int>() = {512, 996, 549, 594, 909, 174, 783, 807, 174, 654, 174, 174, 831, 243, 485, 174, 603, 387, 169, 174, 174, 829, 908, 174, 174, 84, 174, 174, 174, 282, 666, 174, 288, 657, 317, 174, 624, 471, 174, 948, 534, 612, 585, 919, 174, 510, 174, 963, 979, 174, 174, 826, 186, 174, 696, 960, 174, 174, 390, 621, 174, 174, 174, 174, 174, 206, 174, 174, 895, 519, 645, 174, 114, 882, 552, 594, 639, 639, 174, 97, 630, 568, 972, 174, 174, 174, 44, 928, 174, 717, 399, 808, 969, 774, 549, 189, 174, 199, 828, 691, 417, 174, 891, 348, 618, 957, 174, 321, 138, 900, 963, 915, 455, 573, 933, 444, 43, 174, 899, 174, 174, 999, 174, 174, 294, 140, 174, 342, 504, 489, 618, 174, 174, 369, 483, 720, 768, 174, 842, 234, 513, 238, 661, 980, 451, 876, 174, 771, 480, 174, 174, 240, 174, 480, 316, 734, 886, 174, 471, 379, 439, 378, 223, 426, 566, 822, 549, 966, 174, 174, 360, 690, 174, 60, 549, 327, 174, 909, 174, 879, 978, 615, 861, 174, 174, 174, 174, 325, 174, 174, 378, 204, 174, 560, 733, 272, 792, 174, 174, 960, 588, 312, 174, 942, 549, 174, 738, 330, 756, 252, 174, 917, 174, 512, 309, 715, 750, 384, 285, 174, 624, 174, 174, 474, 711, 254, 754, 564, 702, 999, 174, 612, 174, 174, 189, 609, 894, 408, 746, 174, 123, 387, 783, 174, 135, 375, 174, 174, 174, 174, 444, 174, 174, 651, 408, 378, 368, 495, 528, 174, 174, 174, 167, 224, 174, 282, 550, 174, 174, 501, 540, 857, 174, 322, 847, 463, 174, 174, 744, 174, 717, 699, 591, 405, 472, 532, 174, 525, 58, 720, 174, 174, 747, 174, 282, 174, 174, 372, 34, 459, 942, 822, 693, 174, 974, 174, 876, 174, 839, 816, 300, 452, 396, 174, 850, 486, 744, 573, 151, 771, 327, 174, 174, 174, 174, 849, 916, 71, 174, 174, 174, 528, 855, 570, 174, 174, 777, 300, 795, 270, 174, 372, 246, 677, 429, 174, 357, 846, 17, 750, 300, 552, 884, 817, 174, 715, 174, 174, 102, 436, 668, 174, 916, 174, 648, 945, 174, 174, 174, 672, 603, 669, 174, 393, 210, 516, 174, 174, 933, 447, 856, 873, 174, 174, 174, 174, 540, 174, 330, 357, 174, 174, 622, 174, 492, 865, 828, 219, 174, 264, 187, 174, 918, 174, 174, 174, 606, 174, 653, 666, 336, 942, 888, 816, 344, 174, 447, 585, 426, 882, 175, 174, 702, 639, 219, 822, 276, 450, 174, 582, 41, 969, 897, 949, 348, 174, 801, 933, 174, 849, 191, 174, 732, 731, 174, 360, 251, 720, 174, 174, 174, 822, 591, 946, 174, 645, 747, 174, 503, 174, 737, 477, 204, 174, 199, 550, 194, 843, 180, 636, 348, 837, 333, 873, 868, 966, 161, 174, 772, 523, 174, 624, 963, 174, 471, 357, 174, 793, 906, 633, 174, 738, 174, 174, 174, 174, 174, 237, 938, 969, 727, 683, 174, 174, 654, 963, 414, 191, 720, 898, 420, 174, 909, 428, 180, 582, 158, 174, 750, 760, 792, 585, 235, 918, 174, 276, 174, 174, 699, 684, 57, 645, 717, 174, 586, 560, 174, 816, 756, 558, 600, 723, 651, 295, 408, 394, 906, 174, 174, 963, 200, 328, 174, 375, 224, 174, 651, 6, 342, 424, 486, 324, 174, 522, 604, 442, 402, 552, 395, 927, 174, 744, 174, 309, 174, 843, 549, 660, 560, 121, 353, 174, 915, 631, 579, 952, 909, 174, 487, 237, 174, 630, 285, 437, 924, 493, 864, 330, 444, 711, 611, 174, 771, 255, 174, 444, 174, 744, 627, 106, 999, 174, 939, 174, 174, 279, 790, 174, 534, 174, 174, 174, 96, 403, 174, 95, 664, 717, 591, 526, 174, 450, 151, 789, 345, 174, 83, 249, 900, 83, 75, 327, 174, 261, 921, 630, 174, 174, 174, 174, 841, 174, 174, 288, 915, 426, 657, 768, 513, 702, 619, 174, 174, 372, 218, 227, 857, 468, 174, 422, 549, 897, 494, 80, 727, 487, 531, 734, 174, 174, 317, 174, 23, 146, 174, 447, 174, 148, 744, 649, 438, 174, 927, 749, 44, 366, 561, 474, 816, 181, 174, 174, 174, 174, 729, 960, 801, 174, 837, 561, 174, 894, 174, 837, 174, 729, 642, 174, 936, 897, 675, 347, 174, 399, 891, 531, 174, 992, 333, 939, 548, 543, 174, 174, 174, 174, 741, 174, 977, 174, 174, 604, 174, 675, 98, 174, 88, 299, 372, 334, 614, 174, 939, 828, 174, 948, 185, 174, 591, 937, 139, 585, 138, 243, 777, 174, 684, 746, 441, 849, 948, 682, 186, 913, 174, 174, 174, 174, 300, 561, 294, 420, 840, 174, 206, 549, 174, 83, 65, 174, 174, 806, 660, 843, 390, 174, 312, 174, 174, 279, 174, 174, 174, 174, 565, 778, 174, 174, 744, 285, 468, 483, 774, 903, 981, 174, 705, 741, 879, 144, 155, 560, 174, 741, 174, 179, 765, 174, 618, 174, 174, 483, 663, 588, 996, 174, 542, 759, 174, 24, 174, 174, 174, 975, 174, 174, 660, 657, 509, 813, 174, 613, 174, 174, 551, 345, 174, 174, 209, 534, 174, 657, 781, 174, 990, 174, 416, 720, 174, 174, 174, 174, 729, 294, 174, 174, 174, 858, 174, 174, 468, 174, 174, 651, 174, 174, 384, 174, 150, 234, 822, 174, 433, 804, 174, 597, 174, 255, 174, 615, 966, 997, 270, 591, 174, 441, 174, 87, 174, 174, 604, 681, 174, 715, 116, 543, 174, 174, 590, 480, 534, 399, 174, 174, 944, 105, 797, 174, 65, 174, 579, 771, 174, 816, 174, 414, 174, 174, 174, 174, 684, 77, 903, 598, 174, 413, 174, 174, 720, 978, 779, 282, 675, 174, 957, 387, 174, 174, 224, 89, 588, 892, 324, 867, 846, 636, 291, 411, 639, 444, 174, 633, 174, 648, 750, 696, 648, 831, 939, 813, 798, 708, 174, 916, 459, 251, 834, 303, 693, 837, 174, 174, 174, 594, 390, 174, 434, 366, 660, 789, 312, 276, 291, 828, 948, 174, 174, 174, 174, 448, 31, 174, 604, 292, 622, 918, 323, 366, 630, 762, 174, 174, 574, 174, 442, 174, 174, 291, 675, 174, 699, 174, 699, 44, 208, 174, 174, 903, 285, 780, 594, 289, 690, 174, 174, 891, 525, 174, 910, 447, 174, 345, 174, 139, 174, 174, 687, 680, 681, 115, 174, 174, 438, 426, 708, 885, 360, 879, 337, 477, 723, 408, 34, 174, 323, 834, 699, 311, 684, 450, 294, 390, 324, 197, 174, 174, 3, 408, 252, 54, 961, 174, 819, 382, 807, 112, 365, 174, 255, 870, 853, 675, 850, 246, 174, 621, 174, 804, 909, 174, 534, 174, 174, 340, 20, 886, 174, 760, 756, 916, 674, 174, 641, 204, 174, 567, 174, 582, 510, 507, 174, 32, 783, 831, 567, 174, 174, 174, 174, 552, 768, 504, 844, 174, 616, 557, 765, 742, 923, 549, 267, 363, 711, 516, 116, 339, 781, 395, 498, 264, 546, 894, 672, 942, 183, 444, 159, 174, 435, 737, 432, 611, 174, 174, 990, 837, 258, 489, 174, 244, 801, 174, 543, 461, 154, 89, 420, 174, 822, 174, 79, 174, 36, 816, 174, 174, 739, 642, 174, 399, 927, 428, 174, 795, 174, 573, 992, 348, 639, 894, 174, 174, 174, 207, 531, 174, 711, 174, 909, 174, 918, 246, 174, 739, 885, 174, 174, 453, 174, 174, 527, 174, 174, 174, 687, 954, 174, 63, 363, 965, 974, 723, 711, 654, 912, 174, 954, 174, 798, 866, 585, 240, 308, 174, 382, 897, 675, 870, 174, 174, 927, 984, 621, 816, 660, 174, 174, 174, 174, 378, 174, 174, 174, 547, 122, 918, 174, 573, 903, 174, 174, 174, 174, 174, 845, 888, 174, 906, 502, 174, 174, 174, 174, 567, 174, 174, 864, 849, 603, 174, 174, 788, 174, 174, 379, 493, 174, 174, 687, 549, 174, 552, 174, 174, 1000, 1000, 174, 683, 330, 174, 174, 966, 174, 432, 582, 861, 477, 392, 174, 174, 327, 174, 936, 82, 244, 174, 198, 174, 174, 174, 882, 174, 174, 371, 849, 675, 174, 687, 136, 334, 671, 653, 174, 174, 174, 546, 858, 174, 858, 384, 477, 249, 174, 306, 596, 933, 378, 442, 417, 696, 174, 174, 930, 654, 315, 174, 174, 718, 174, 819, 590, 987, 174, 661, 540, 401, 174, 284, 42, 174, 174, 956, 341, 242, 208, 174, 174, 594, 342, 153, 909, 805, 395, 547, 174, 696, 122, 609, 174, 174, 173, 85, 504, 903, 522, 574, 174, 174, 915, 174, 174, 928, 801, 81, 89, 210, 597, 836, 174, 786, 558, 174, 579, 174, 959, 681, 174, 467, 174, 174, 174, 434, 849, 411, 693, 436, 363, 765, 603, 894, 174, 549, 285, 174, 174, 174, 288, 456, 429, 354, 174, 621, 754, 174, 561, 798, 732, 174, 918, 988, 432, 174, 213, 288, 174, 174, 174, 533, 477, 174, 777, 771, 174, 702, 294, 174, 957, 117, 513, 936, 174, 588, 717, 703, 727, 403, 315, 174, 849, 174, 174, 174, 432, 174, 833, 899, 174, 723, 693, 30, 174, 990, 735, 624, 174, 756, 411, 540, 408, 747, 174, 174, 413, 174, 300, 396, 507, 174, 747, 174, 174, 174, 285, 699, 375, 518, 174, 174, 174, 759, 174, 975, 882, 579, 174, 659, 657, 174, 750, 174, 231, 757, 412, 404, 174, 174, 174, 174, 174, 384, 174, 174, 816, 611, 726, 831, 174, 174, 777, 663, 174, 174, 882, 982, 56, 723, 373, 596, 798, 411, 174, 174, 330, 468, 708, 525, 798, 174, 714, 453, 824, 776, 174, 963, 435, 306, 409, 900, 174, 276, 791, 174, 385, 999, 597, 174, 174, 840, 945, 501, 918, 501, 686, 718, 174, 938, 894, 174, 174, 174, 273, 582, 174, 947, 753, 999, 309, 663, 960, 231, 803, 954, 438, 21, 828, 681, 585, 909, 933, 174, 693, 174, 330, 174, 498, 746, 229, 514, 174, 513, 174, 174, 948, 174, 204, 462, 642, 174, 339, 174, 174, 174, 174, 174, 840, 553, 486, 921, 558, 976, 489, 867, 918, 588, 897, 606, 405, 711, 174, 936, 771, 453, 174, 437, 708, 174, 174, 372, 534, 174, 174, 3, 441, 174, 306, 174, 708, 867, 718, 174, 174, 558, 543, 174, 174, 204, 174, 558, 174, 276, 258, 174, 903, 792, 471, 240, 174, 174, 246, 312, 704, 174, 174, 174, 174, 321, 174, 828, 174, 696, 477, 756, 474, 174, 29, 792, 174, 174, 174, 792, 321, 657, 386, 984, 294, 186, 747, 956, 174, 810, 174, 678, 999, 174, 174, 174, 727, 174, 822, 435, 174, 174, 801, 455, 558, 444, 174, 174, 496, 733, 318, 876, 11, 174, 174, 525, 444, 74, 702, 454, 771, 98, 174, 552, 160, 174, 432, 174, 600, 0, 174, 678, 174, 706, 543, 692, 708, 336, 627, 447, 174, 696, 162, 174, 174, 174, 174, 951, 363, 174, 747, 174, 600, 879, 777, 648, 174, 174, 240, 839, 67, 702, 699, 492, 417, 873, 675, 714, 357, 846, 996, 691, 552, 232, 363, 174, 170, 174, 816, 715, 472, 122, 174, 369, 682, 563, 551, 981, 234, 384, 174, 876, 680, 630, 484, 366, 531, 51, 695, 99, 290, 525, 312, 976, 174, 198, 660, 174, 174, 999, 678, 276, 720, 387, 174, 174, 866, 174, 429, 801, 204, 513, 594, 174, 558, 453, 684, 660, 276, 174, 174, 136, 213, 174, 174, 301, 174, 174, 178, 174, 914, 408, 471, 393, 876, 720, 174, 174, 174, 174, 716, 300, 561, 83, 174, 402, 525, 174, 984, 330, 244, 925, 660, 588, 768, 174, 174, 543, 174, 174, 253, 354, 174, 174, 196, 519, 174, 321, 894, 323, 950, 174, 816, 174, 978, 859, 643, 174, 597, 454, 76, 891, 174, 783, 963, 174, 161, 174, 174, 529, 441, 312, 525, 828, 174, 468, 522, 264, 174, 96, 174, 174, 595, 174, 345, 174, 366, 174, 174, 174, 411, 174, 174, 207, 435, 49, 174, 855, 202, 174, 174, 951, 7, 486, 756, 240, 174, 174, 312, 174, 142, 381, 942, 336, 814, 159, 174, 779, 626, 564, 333, 174, 174, 174, 675, 105, 273, 675, 684, 174, 909, 594, 966, 294, 6, 417, 718, 174, 681, 174, 291, 842, 464, 408, 174, 747, 714, 174, 174, 174, 798, 481, 510, 174, 853, 174, 660, 131, 23, 936, 77, 174, 960, 705, 217, 174, 174, 174, 174, 238, 623, 987, 174, 630, 174, 378, 771, 174, 831, 393, 720, 503, 876, 46, 693, 224, 525, 579, 174, 174, 174, 174, 8, 459, 438, 663, 300, 606, 748, 789, 174, 942, 563, 174, 93, 174, 957, 174, 174, 732, 606, 276, 969, 939, 174, 488, 612, 174, 660, 684, 348, 693, 570, 540, 174, 927, 546, 803, 921, 636, 275, 174, 795, 859, 174, 249, 475, 618, 174, 174, 751, 174, 263, 174, 441, 487, 174, 174, 618, 126, 174, 676, 174, 174, 795, 474, 174, 174, 972, 174, 758, 672, 39, 174, 981, 849, 807, 174, 414, 717, 163, 930, 944, 244, 174, 174, 288, 295, 458, 174, 174, 450, 939, 576, 842, 174, 543, 300, 971, 174, 174, 174, 814, 219, 594, 174, 273, 174, 174, 441, 632, 375, 668, 643, 174, 174, 611, 786});
    cout << r << endl;

    r = sol.scoreOfStudents("1+2*3+4", vector<int>() = {13, 21, 11, 15});
    cout << r << endl;

    r = sol.scoreOfStudents("1+2*3+4", vector<int>() = {13, 21, 11, 15});
    cout << r << endl;

    r = sol.scoreOfStudents("7+3*1*2", vector<int>() = {20, 13, 42});
    cout << r << endl;
}